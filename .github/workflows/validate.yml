name: Validate code with tests and static analysis

on:
  pull_request:
    branches:
      - main
      - beta
      - alpha
      - development

jobs:
  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Check formatting errors
        run: npx prettier --check .

  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Check linting errors
        run: npx eslint .

  build-and-analyze:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 18
        language:
          - javascript-typescript
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}.x
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Initialize CodeQL
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Perform CodeQL Analysis
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
        uses: github/codeql-action/analyze@v2
        with:
          category: /language:${{matrix.language}}

  test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 18
    environment: main
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}.x
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test:coverage
      # - name: Analyze with SonarCloud
      #   if: (success() || failure()) && matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Needed to push to SonarCloud
